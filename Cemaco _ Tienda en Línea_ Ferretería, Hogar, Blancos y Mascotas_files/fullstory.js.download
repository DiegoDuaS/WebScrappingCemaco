const debugModeFullStory = false;
const hostFullStory = 'fullstory.com'; 
const fullStoryScript = 'edge.fullstory.com/s/fs.js'; 
const organizationCode = '10MM3T'; 
const namespaceFullStory = 'FullStory';
const cookieName = 'runFSRecording'
const cookiIdName = 'idRSRecording'
const buyBtn = document.querySelector('.BuyInPage-wrapper .buy-in-page-button')
const cookie_name = 'cfs_id'
const hours = 3
const regex=RegExp(`(?:(?:^|.*;\\s*)${cookie_name}\\s*\\=\\s*([^;]*).*$)|^.*$`)

function generateId(){
    return (Math.floor(Math.random() * 10) + 1);
}

function setIdLocalStorage(id){
    localStorage.setItem(cookiIdName, id);
}

function setRunFSLocalStorage(value){
    localStorage.setItem(cookieName, value);
}

async function FSAddToCart(){
    /*Await until product variable is defined on website*/
    while(!window.hasOwnProperty('product')){
        await new Promise(resolve => setTimeout(resolve, 1000))
    }
    /*Await until product variable is defined on website*/
    buyBtn.onclick = function (){
        FullStory.event('Product Added', {
            sku: document.querySelector('.skuReference').textContent,
            name: `${product.productName}`,
            price: product.productPriceFrom,
            quantity: `${document.querySelector('.product-detail__quantity-input').value}`,
            url_str: `${product.pageUrl}`,
            image_url_str: `${document.querySelector('.image-zoom').href}`
        });
    }
}

function runSnippet() {
    window['_fs_debug'] = debugModeFullStory;
    window['_fs_host'] = hostFullStory;
    window['_fs_script'] = fullStoryScript;
    window['_fs_org'] = organizationCode;
    window['_fs_namespace'] = namespaceFullStory;
    (function (m, n, e, t, l, o, g, y) {
        if (e in m) { if (m.console && m.console.log) { m.console.log('FullStory namespace conflict. Please set window["_fs_namespace"].'); } return; }
        g = m[e] = function (a, b, s) { g.q ? g.q.push([a, b, s]) : g._api(a, b, s); }; g.q = [];
        o = n.createElement(t); o.async = 1; o.crossOrigin = 'anonymous'; o.src = 'https://' + _fs_script;
        y = n.getElementsByTagName(t)[0]; y.parentNode.insertBefore(o, y);
        g.identify = function (i, v, s) { g(l, { uid: i }, s); if (v) g(l, v, s) }; g.setUserVars = function (v, s) { g(l, v, s) }; g.event = function (i, v, s) { g('event', { n: i, p: v }, s) };
        g.anonymize = function () { g.identify(!!0) };
        g.shutdown = function () { g("rec", !1) }; g.restart = function () { g("rec", !0) };
        g.log = function (a, b) { g("log", [a, b]) };
        g.consent = function (a) { g("consent", !arguments.length || a) };
        g.identifyAccount = function (i, v) { o = 'account'; v = v || {}; v.acctId = i; g(o, v) };
        g.clearUserCookie = function () { };
        g.setVars = function (n, p) { g('setVars', [n, p]); };
        g._w = {}; y = 'XMLHttpRequest'; g._w[y] = m[y]; y = 'fetch'; g._w[y] = m[y];
        if (m[y]) m[y] = function () { return g._w[y].apply(this, arguments) };
        g._v = "1.3.0";
    })(window, document, window['_fs_namespace'], 'script', 'user');
    window['_fs_ready'] = async function () {
        var sessionUrl = FullStory.getCurrentSessionURL();
        await fetch("https://wztupbgfbl.execute-api.us-east-1.amazonaws.com/prod/create_session",{
            body: JSON.stringify({session:sessionUrl}),
            method: 'POST',
            headers:new Headers({
                'Content-Type':'application/json'
            }),
        })
       };
}


async function startScript(){
    try{
        var response = await fetch("https://wztupbgfbl.execute-api.us-east-1.amazonaws.com/prod/status",{
            method:'GET',
            headers: new Headers({
                'Content-Type':'application/json'})})
        var fs_cookie = document.cookie.replace(regex, "$1")
        var valid = false
        if(response.status===200){
            valid = (await response.json()).valid
        }
        if(valid || fs_cookie){
            if(!fs_cookie){
                let id = generateId();
                if(id > 0 && id < 4){
                    document.cookie = `${cookie_name}=`+id+`;max-age=${Math.round(3600*hours)}`
                    runSnippet()
                    FSAddToCart()
                }else{
                    document.cookie = `${cookie_name}=`+id+`;max-age=${Math.round(3600*hours)}`
                }
            }else{
                if(fs_cookie > 0 && fs_cookie < 4){
                    runSnippet()
                    FSAddToCart()
                }
            }
        }
    }
    catch(ex){console.error(ex)}
}

startScript();